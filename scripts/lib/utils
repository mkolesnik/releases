#!/usr/bin/env bash

readonly PROJECTS=(admiral lighthouse shipyard submariner submariner-charts submariner-operator)
readonly ADMIRAL_CONSUMERS=(lighthouse submariner)
readonly SHIPYARD_CONSUMERS=(admiral lighthouse submariner submariner-operator)
readonly OPERATOR_CONSUMES=(submariner lighthouse)

function printerr() {
    local err_msg="$*"

    [[ -z "${file}" ]] || err_msg+=" (${file})"
    printf "ERROR: %s\n" "${err_msg}" >&2
}

function get_value() {
    yq r $file $key
}

function determine_target_release() {
    file=$(readlink -f releases/target)

    if [[ ! -f "$file" ]]; then
        echo "WARN: Target release file doesn't exist, skipping."
        exit 0
    fi
}

function read_release_file() {
    declare -gA release

    function _read() {
        local key=$1
        release[$key]=$(get_value $file $key)
    }

    _read 'version'
    _read 'name'
    _read 'release-notes'
    _read 'status'
    _read 'components'
    for project in ${PROJECTS[*]}; do
        _read "components.${project}"
    done
}

function _git() {
    git -C "projects/${project}" "$@"
}

function clone_repo() {
    local branch="${1:-${release["components.${project}"]}}"
    if [[ -d "projects/${project}" ]]; then
        _git fetch -f --tags
    else
        mkdir -p projects
        git clone "https://github.com/submariner-io/${project}" "projects/${project}"
        _git config advice.detachedHead false
    fi

    _git checkout "${branch}"
}

